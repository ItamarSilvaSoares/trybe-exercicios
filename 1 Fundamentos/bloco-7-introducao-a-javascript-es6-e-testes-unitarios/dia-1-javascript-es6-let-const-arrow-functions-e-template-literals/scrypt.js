
// PARTE 1

// 1 üöÄ Fa√ßa as modifica√ß√µes necess√°rias na fun√ß√£o para que o seu comportamento respeite o escopo no qual cada vari√°vel foi declarada.

// Modifique a estrutura da fun√ß√£o para que ela seja uma arrow function.
// Modifique as concatena√ß√µes para template literals. 

  const func = (escopo) => {
        if (escopo === true) {
          let ifScope = 'N√£o devo ser utilizada fora do meu escopo (if)';
          ifScope = `${ifScope}   √≥timo, fui utilizada no escopo !`;
          console.log(ifScope);
        } else {
            let elseScope = 'N√£o devo ser utilizada fora meu escopo (else)';
            console.log(elseScope);
        }
    }
    
          func(true);
    
    //   üöÄ Copie o c√≥digo abaixo e fa√ßa uma fun√ß√£o que retorne o array oddsAndEvens em ordem crescente.
    
    // Utilize template literals para que a chamada console.log(<seu c√≥digo>oddsAndEvens<seu c√≥digo>); retorne "Os n√∫meros 2,3,4,7,10,13 se encontram ordenados de forma crescente!".
    // B√¥nus (opcional): tente fazer o mesmo exerc√≠cio utilizando o m√©todoarray.sort(). Spoiler: √â poss√≠vel realizar uma fun√ß√£o que ordene qualquer array de n√∫meros.
    
    const oddsAndEvens = [13, 3, 4, 10, 7, 2];
    
    const cres = odds => odds.sort((a,b) => a - b)
    
    console.log(`Os n√∫meros ${cres(oddsAndEvens)} se encontram ordenados de forma crescente!`); 
    
    // PARTE 2


    // Crie uma fun√ß√£o que receba um n√∫mero e retorne seu fatorial.

    // Na matem√°tica, o fatorial de um n√∫mero n√£o negativo N, com a nota√ß√£o N!, √© o produto de todos os inteiros menores ou iguais a N. Exemplo: 4! = 4 * 3 * 2 * 1 = 24.
    // B√¥nus (opcional): tente fazer o mesmo exerc√≠cio de forma recursiva. Spoiler: √â poss√≠vel resolver com uma linha usando ternary operator.

    // Crie uma fun√ß√£o que receba uma frase e retorne qual a maior palavra.

    const fat = number => number === 1 ? 1 : number * fat(number - 1);

    console.log(fat(5));

    // Crie uma fun√ß√£o que receba uma frase e retorne qual a maior palavra. 

    const maiorP = string => string.split(' ').sort((a, b) => b.length - a.length)[0];

    console.log(maiorP("Antonio foi no banheiro e n√£o sabemos o que aconteceu"));

    // 3 Crie uma p√°gina que contenha:

    // Um bot√£o ao qual ser√° associado um event listener;
    // Uma vari√°vel clickCount no arquivo JavaScript que acumule o n√∫mero de clicks no bot√£o;
    // Um campo no HTML que v√° atualizando a quantidade de clicks no bot√£o conforme a vari√°vel clickCount √© atualizada.

//     let clickCount = 0;
//     const bu = document.querySelector('#bu');
//     bu.addEventListener('click', () => {
// clickCount += 1;
// document.querySelector('#count').innerHTML = clickCount;
//     })


    // 4 Crie um c√≥digo JavaScript com a seguinte especifica√ß√£o:

    // N√£o se esque√ßa de usar template literals
    
    //     Fun√ß√£o 1: Escreva uma fun√ß√£o que vai receber uma string como par√¢metro. Sua fun√ß√£o dever√° procurar pela letra x em uma string qualquer que voc√™ determinar e substituir pela string que voc√™ passou como par√¢metro. Sua fun√ß√£o deve retornar essa nova string.
    //     Exemplo:
    //         String determinada: "Tryber x aqui!"
    //         Par√¢metro: "Bebeto"
    //         Retorno: "Tryber Bebeto aqui!"
    //     Um array com escopo global, que √© o escopo do arquivo JS, nesse caso, contendo cinco strings com suas principais skills.
    //     Fun√ß√£o 2: Escreva uma fun√ß√£o que vai receber a string retornada da Fun√ß√£o 1 como par√¢metro. Essa fun√ß√£o deve concatenar as skills do array global √† string que foi passada para a Fun√ß√£o 2 via par√¢metro. Voc√™ deve ordenar os skills em ordem alfab√©tica. Sua fun√ß√£o deve retornar essa nova string.
    //     Exemplo:
    //     "Tryber x aqui!
    //     Minhas cinco principais habilidades s√£o:
    //         JavaScript;
    //         HTML; ...
    //     #goTrybe".

    const replace = (string, x) => string.replace('x', x);

    console.log(replace("Tryber x aqui!",  "Bebeto" ));
    
    const array = ['Java', 'JavaScript', 'HTML', 'CSS', 'GitHub'];
    
    const soV = string => string +=` Minhas cinco principais habilidades s√£o: ${array.sort()}
    #goTrybe`
    
    console.log(soV(replace("Tryber x aqui!",  "Bebeto" )));